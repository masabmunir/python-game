board=["-", "-", "-",
       "-", "-", "-",
      "-", "-", "-" ]

game_still_going=True

# who win or tie
winner=None

# who turn is it
current_player="X"

def display_board():
    print(board[0] + "|" + board[1] + "|" + board[2])
    print(board[3] + "|" + board[4] + "|" + board[5])
    print(board[6] + "|" + board[7] + "|" + board[8])
    

def play_game():
        # Display initial board    
        display_board()
        
        while game_still_going:
            
            handle_turn(current_player)
            
            check_if_game_over()
            
            flip_player()
            
# the game is ended
if winner=="X" or winner=="O":
     print(winner + ".win")
elif winner==None:
    print("Tie.")

    
def handle_turn(current_player):
    position=input("choice position to select 1-9:")
    position=int(position) - 1
    
    board[position] = "X"
    
    display_board
    
def check_if_game_over():
    check_for_winner()
    check_if_tie()
    
def check_for_winner():
    
    global winner 
    
    #check row
    row_winner=check_row()
    #check column
    colum_winner=check_column()
    #check diagonal
    diagonal_winner=check_diagonal()
    if row_winner:
        winner=row_winner
        
    elif colum_winner:
        winner=colum_winner
        
    elif diagonal_winner:
        diagonal=diagonal_winner
        
    else:
        winner=None
        return
    
    def check_row():
        global game_still_going
        
        row_1=board[0]==board[1]==board[2] !="-"
        row_2=board[3]==board[4]==board[5] !="-"
        row_3=board[6]==board[7]==board[8] !="-"
        
        if row_1 or row_2 or row_3:
            game_still_going=False
        
        if row_1:
            return board[0]
        elif row_2:
            return board[3]
        elif row_3:
            return board[6]
        return
        
    
    def check_column():
        
         global game_still_going
        
        column_1=board[0]==board[3]==board[6] !="-"
        column_2=board[1]==board[4]==board[7] !="-"
        column_3=board[2]==board[5]==board[8] !="-"
        
        if column_1 or column_2 or column_3:
            game_still_going=False
        
        if column_1:
            return board[0]
        elif column_2:
            return board[1]
        elif column_3:
            return board[2]
        return
        
    
    def check_diagonal():
         global game_still_going
        
        diagonal_1=board[0]==board[4]==board[8] !="-"
        diagonal_2=board[6]==board[4]==board[2] !="-"
        
        if diagonal_1 or diagonal_2:
            game_still_going=False
        
        elif diagonal_1:
            return diagonal[0]
        elif diagonal_2:
            return diagonal[6]
            
        return
        
        

def check_if_tie():
    
    return

def flip_player():
    return
play_game()    
    
    